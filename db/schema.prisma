// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model GroupMember {
  id   Int    @id @default(autoincrement())
  name String

  cannotDraw  String[] @default([])
  drawResult  String?

  group   Group  @relation(fields: [groupId], references: [id])
  groupId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tokens   Token[]
  sessions Session[]

  @@unique([name, groupId])
  @@unique([drawResult, groupId])
}

model Group {
  id          String  @id @default(uuid())
  name        String  @unique
  eventName   String
  description String?
  createdBy   String

  hashedPassword String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members GroupMember[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   GroupMember? @relation(fields: [userId], references: [id])
  userId Int?
}

model Token {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hashedToken String
  type        String
  // See note below about TokenType enum
  // type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   GroupMember @relation(fields: [userId], references: [id])
  userId Int

  @@unique([hashedToken, type])
}
